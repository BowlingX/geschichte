(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1242:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(445);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)(__webpack_require__(1266),module)}.call(this,__webpack_require__(1243)(module))},1266:function(module,exports,__webpack_require__){var map={"./geschichte.stories.mdx":1267};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1266},1267:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"history",(function(){return history})),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(1),__webpack_require__(46),__webpack_require__(39),__webpack_require__(9),__webpack_require__(4),__webpack_require__(70),__webpack_require__(42),__webpack_require__(1268),__webpack_require__(1269),__webpack_require__(5),__webpack_require__(41),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(34),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(97),_examples_index_tsx__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(446),_lib_adapters_History_js_tsx__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(274),history__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(275);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var history=Object(history__WEBPACK_IMPORTED_MODULE_16__.createBrowserHistory)(),layoutProps={history:history},_ref2=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Meta,{title:"Components|Geschichte",mdxType:"Meta"}),_ref3=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"Provides a global state for all namespaces."),_ref4=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Props,{of:_lib_adapters_History_js_tsx__WEBPACK_IMPORTED_MODULE_15__.GeschichteWithHistory,mdxType:"Props"}),_ref5=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("p",null,"You require to define a Toplevel ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("inlineCode",{parentName:"p"},"<Geschichte />")," component in your tree to be able\nto use any of the provides hooks."),_ref6=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.Preview,{mdxSource:"%0A%3CApp%20/%3E%0A",mdxType:"Preview"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_examples_index_tsx__WEBPACK_IMPORTED_MODULE_14__.App,{mdxType:"App"}));function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),_ref2,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h1",{id:"geschichte-provider"},"Geschichte Provider"),_ref3,_ref4,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"example"},"Example"),_ref5,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("code",_extends({parentName:"pre"},{className:"language-jsx",metastring:"harmony",harmony:!0}),"import Geschichte from 'geschichte'\nimport { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport const App = () => (\n  <Geschichte history={history}>\n   {/* your component tree */}\n  </Geschichte>\n)\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)("h2",{id:"test"},"Test"),_ref6)}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.story={parameters:{docsOnly:!0}};var componentMeta={title:"Components|Geschichte",includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{};var _ref7=Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_13__.AddContext,{mdxStoryNameToKey:{},mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_12__.mdx)(MDXContent,null));componentMeta.parameters.docs=function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}({},componentMeta.parameters.docs||{},{page:function page(){return _ref7}}),__webpack_exports__.default=componentMeta},1274:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var History_js_1=__webpack_require__(274);exports.default=History_js_1.default;var serializers_1=__webpack_require__(1275);exports.serializers=serializers_1.serializers,exports.Serializer=serializers_1.Serializer,exports.arrayFloatSerializer=serializers_1.arrayFloatSerializer,exports.arrayIntSerializer=serializers_1.arrayIntSerializer,exports.arrayStringSerializer=serializers_1.arrayStringSerializer,exports.DEFAULT_SEPARATOR=serializers_1.DEFAULT_SEPARATOR;var middleware_1=__webpack_require__(431);exports.StoreState=middleware_1.StoreState;var store_1=__webpack_require__(183);exports.HistoryManagement=store_1.HistoryManagement,exports.geschichte=store_1.geschichte,exports.factoryParameters=store_1.factoryParameters,exports.useBatchQuery=store_1.useBatchQuery,exports.useStore=store_1.useStore,exports.DEFAULT_NAMESPACE=store_1.DEFAULT_NAMESPACE,exports.StoreContext=store_1.StoreContext;var utils_1=__webpack_require__(270);exports.pm=utils_1.pm;var Next_js_1=__webpack_require__(1276);exports.GeschichteForNextjs=Next_js_1.default;try{__type.displayName="__type",__type.__docgenInfo={description:"",displayName:"__type",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#__type"]={docgenInfo:__type.__docgenInfo,name:"__type",path:"src/index.tsx#__type"})}catch(__react_docgen_typescript_loader_error){}try{src.displayName="src",src.__docgenInfo={description:"",displayName:"src",props:{initialSearch:{defaultValue:null,description:"the initial search string (e.g. ?query=test), contains the questionsmark",name:"initialSearch",required:!0,type:{name:"string"}},push:{defaultValue:null,description:"",name:"push",required:!0,type:{name:"(next: string) => void"}},replace:{defaultValue:null,description:"",name:"replace",required:!0,type:{name:"(next: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#src"]={docgenInfo:src.__docgenInfo,name:"src",path:"src/index.tsx#src"})}catch(__react_docgen_typescript_loader_error){}},1275:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const join=(value,separator)=>value.join(separator),split=(value,separator)=>value.split(separator),intSerializer={deserialize:value=>{const num=parseInt(value,10);return Number.isNaN(num)?null:num},serialize:value=>String(value)},floatSerializer={deserialize:value=>{const num=parseFloat(value);return Number.isNaN(num)?null:num},serialize:value=>String(value)},stringSerializer={deserialize:value=>String(value),serialize:value=>String(value)};exports.arrayStringSerializer=separator=>({deserialize:value=>split(value,separator),serialize:value=>value&&join(value,separator)||null}),exports.arrayIntSerializer=separator=>({deserialize:value=>split(value,separator).map(intSerializer.deserialize),serialize:value=>value&&join(value,separator)||null}),exports.arrayFloatSerializer=separator=>({deserialize:value=>split(value,separator).map(floatSerializer.deserialize),serialize:value=>value&&join(value,separator)||null});exports.DEFAULT_SEPARATOR="_",exports.serializers={arrayFloat:exports.arrayFloatSerializer(exports.DEFAULT_SEPARATOR),arrayInt:exports.arrayIntSerializer(exports.DEFAULT_SEPARATOR),arrayString:exports.arrayStringSerializer(exports.DEFAULT_SEPARATOR),boolean:{deserialize:value=>"1"===value,serialize:value=>value?"1":"0"},date:(locale="en-us",timeZone="UTC")=>({deserialize:value=>new Date(value),serialize:value=>value.toLocaleDateString(locale,{timeZone:timeZone})}),float:floatSerializer,int:intSerializer,string:stringSerializer};try{exports.arrayStringSerializer.displayName="arrayStringSerializer",exports.arrayStringSerializer.__docgenInfo={description:"",displayName:"arrayStringSerializer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/serializers.ts#arrayStringSerializer"]={docgenInfo:exports.arrayStringSerializer.__docgenInfo,name:"arrayStringSerializer",path:"src/lib/serializers.ts#arrayStringSerializer"})}catch(__react_docgen_typescript_loader_error){}try{exports.arrayIntSerializer.displayName="arrayIntSerializer",exports.arrayIntSerializer.__docgenInfo={description:"",displayName:"arrayIntSerializer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/serializers.ts#arrayIntSerializer"]={docgenInfo:exports.arrayIntSerializer.__docgenInfo,name:"arrayIntSerializer",path:"src/lib/serializers.ts#arrayIntSerializer"})}catch(__react_docgen_typescript_loader_error){}try{exports.arrayFloatSerializer.displayName="arrayFloatSerializer",exports.arrayFloatSerializer.__docgenInfo={description:"",displayName:"arrayFloatSerializer",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nReplaces text in a string, using a regular expression or search string.\nReplaces text in a string, using an object that supports replacement within a string.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\nFinds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\rIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\nSplit a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\rIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\r\nthe String resulting from converting this object to a String.\r\nIf there is no element at that position, the result is undefined.\r\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\nReturns the String value result of normalizing the string into the normalization form\r\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\ris "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\r\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an <a> HTML anchor element and sets the name attribute to the text value\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a <big> HTML element",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a <blink> HTML element",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a <b> HTML element",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a <tt> HTML element",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a <font> HTML element and sets the color attribute value",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a <font> HTML element and sets the size attribute value\nReturns a <font> HTML element and sets the size attribute value",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an <i> HTML element",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an <a> HTML element and sets the href attribute value",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a <small> HTML element",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a <strike> HTML element",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a <sub> HTML element",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a <sup> HTML element",name:"sup",required:!0,type:{name:"() => string"}},"__@iterator":{defaultValue:null,description:"Iterator",name:"__@iterator",required:!0,type:{name:"() => IterableIterator<string>"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\rIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\rIf this string is too long, it will be truncated and the left-most part will be applied.\rThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimLeft:{defaultValue:null,description:"Removes whitespace from the left end of a string.",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes whitespace from the right end of a string.",name:"trimRight",required:!0,type:{name:"() => string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/serializers.ts#arrayFloatSerializer"]={docgenInfo:exports.arrayFloatSerializer.__docgenInfo,name:"arrayFloatSerializer",path:"src/lib/serializers.ts#arrayFloatSerializer"})}catch(__react_docgen_typescript_loader_error){}},1276:function(module,exports,__webpack_require__){"use strict";var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const react_1=__importStar(__webpack_require__(0)),shallow_1=__importDefault(__webpack_require__(182)),store_1=__webpack_require__(183),split=url=>url.split("?");exports.default=({children:children,initialPath:initialPath,Router:Router})=>{const historyInstance=react_1.useMemo(()=>{const initial=split(initialPath),[,query]=initial;return{initialSearch:`?${query||""}`,push:next=>{const[path]=split(Router.asPath);Router.push(Router.route,`${path}${next}`)},replace:next=>{const[path]=split(Router.asPath);Router.replace(Router.route,`${path}${next}`)}}},[]),value=react_1.useMemo(()=>store_1.geschichte(historyInstance),[historyInstance]),[useStore]=value,state=useStore(({unregister:unregister,updateFromQuery:updateFromQuery})=>({unregister:unregister,updateFromQuery:updateFromQuery}),shallow_1.default),{updateFromQuery:updateFromQuery}=state;return react_1.useEffect(()=>{const{unregister:unregister}=state,handler=url=>{const[,query]=split(url);updateFromQuery(`?${query||""}`)};return Router.events.on("routeChangeStart",handler),()=>{Router.events.off("routeChangeStart",handler),unregister()}},[updateFromQuery]),react_1.default.createElement(store_1.StoreContext.Provider,{value:value},children)};try{Nextjs.displayName="Nextjs",Nextjs.__docgenInfo={description:"",displayName:"Nextjs",props:{Router:{defaultValue:null,description:"",name:"Router",required:!0,type:{name:"{ readonly asPath: string; readonly route: string; readonly push: (url: string, as: string) => any; readonly replace: (url: string, as: string) => any; readonly events: { readonly on: (event: string, handler: (...args: any) => any) => any; readonly off: (event: string, handler: (...args: any) => any) => any; }; }"}},initialPath:{defaultValue:null,description:"",name:"initialPath",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/adapters/Next.js.tsx#Nextjs"]={docgenInfo:Nextjs.__docgenInfo,name:"Nextjs",path:"src/lib/adapters/Next.js.tsx#Nextjs"})}catch(__react_docgen_typescript_loader_error){}},183:function(module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const immer_1=__importDefault(__webpack_require__(428)),memoize_one_1=__importDefault(__webpack_require__(429)),query_string_1=__webpack_require__(430),react_1=__webpack_require__(0),zustand_1=__webpack_require__(1273),shallow_1=__importDefault(__webpack_require__(182)),middleware_1=__webpack_require__(431),utils_1=__webpack_require__(270);exports.DEFAULT_NAMESPACE="default",exports.StoreContext=react_1.createContext(null),exports.geschichte=historyInstance=>{const thisStore=middleware_1.converter(historyInstance),storeWithHistory=middleware_1.historyManagement(historyInstance)(thisStore),middleware=middleware_1.immerWithPatches(storeWithHistory);return zustand_1.create(middleware)},exports.useStore=()=>{const[store]=react_1.useContext(exports.StoreContext);return store},exports.useBatchQuery=()=>exports.useStore()(({batchPushState:batchPushState,batchReplaceState:batchReplaceState})=>({batchPushState:batchPushState,batchReplaceState:batchReplaceState}),shallow_1.default),exports.factoryParameters=(config,defaultInitialValues={},ns=exports.DEFAULT_NAMESPACE)=>{const flatConfig=utils_1.flattenConfig(config),memInitBlank=memoize_one_1.default(initialQueries=>{let thisQuery={};const initialValues="function"==typeof defaultInitialValues?defaultInitialValues():defaultInitialValues,values=immer_1.default(initialValues,draft=>{thisQuery=utils_1.applyFlatConfigToState(flatConfig,initialQueries,ns,draft,initialValues)});return{initialValues:initialValues,query:thisQuery,values:values}});return{useQuery:()=>{const[useStore,api]=react_1.useContext(exports.StoreContext),{register:register,pushState:pushState,replaceState:replaceState,resetPush:resetPush,resetReplace:resetReplace,initialQueries:initialQueries}=useStore(({register:register,pushState:pushState,replaceState:replaceState,resetPush:resetPush,resetReplace:resetReplace,initialQueries:initialQueries})=>({initialQueries:initialQueries,pushState:pushState,register:register,replaceState:replaceState,resetPush:resetPush,resetReplace:resetReplace}),shallow_1.default),initialRegisterState=react_1.useMemo(()=>{const namespaceData=api.getState().namespaces[ns]||{},{values:values,query:query,initialValues:initialValues}=namespaceData;return values?{initialValues:initialValues,query:query,values:values}:memInitBlank(initialQueries())},[api]),[currentState,setCurrentState]=react_1.useState({initialValues:initialRegisterState.initialValues,values:initialRegisterState.values});react_1.useEffect(()=>{const unregister=register(config,flatConfig,ns,initialRegisterState.initialValues,initialRegisterState.query,initialRegisterState.values),unsubscribe=api.subscribe(state=>{state&&setCurrentState(state)},state=>state.namespaces[ns]&&{initialValues:state.namespaces[ns].initialValues,values:state.namespaces[ns].values},shallow_1.default);return()=>{unsubscribe(),unregister()}},[]);const values=currentState.values,initialValues=currentState.initialValues,createQuery=react_1.useCallback(values=>utils_1.createQueryObject(flatConfig,ns,values,initialValues),[initialValues]);return react_1.useMemo(()=>({createQuery:customValues=>createQuery(customValues||values),createQueryString:customValues=>query_string_1.stringify(createQuery(customValues||values)),initialValues:initialValues,pushState:state=>pushState(ns,state),replaceState:state=>replaceState(ns,state),resetPush:()=>resetPush(ns),resetReplace:()=>resetReplace(ns),values:values}),[values,initialValues,pushState,replaceState,resetPush,resetReplace,createQuery])},createQueryString:values=>{const initialValues="function"==typeof defaultInitialValues?defaultInitialValues():defaultInitialValues;return query_string_1.stringify(utils_1.createQueryObject(flatConfig,ns,values,initialValues))}}};try{exports.geschichte.displayName="geschichte",exports.geschichte.__docgenInfo={description:"",displayName:"geschichte",props:{initialSearch:{defaultValue:null,description:"the initial search string (e.g. ?query=test), contains the questionsmark",name:"initialSearch",required:!0,type:{name:"string"}},push:{defaultValue:null,description:"",name:"push",required:!0,type:{name:"(next: string) => void"}},replace:{defaultValue:null,description:"",name:"replace",required:!0,type:{name:"(next: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/store.ts#geschichte"]={docgenInfo:exports.geschichte.__docgenInfo,name:"geschichte",path:"src/lib/store.ts#geschichte"})}catch(__react_docgen_typescript_loader_error){}},270:function(module,exports,__webpack_require__){"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const shallow_1=__importDefault(__webpack_require__(182)),store_1=__webpack_require__(183);exports.pm=(name,serializer)=>()=>({name:name,serializer:serializer}),exports.createOrApplyPath=(obj,path,value=null)=>{let current=obj,thisPath=[...path];for(;thisPath.length>1;){const[head,...tail]=thisPath;thisPath=tail,void 0===current[head]&&(current[head]={}),current=current[head]}return current[thisPath[0]]=value,obj},exports.formatNamespace=(key,ns)=>ns&&ns!==store_1.DEFAULT_NAMESPACE?`${ns}.${key}`:key,exports.get=(object,path)=>path.reduce((next,key)=>next?next[key]:void 0,object),exports.skipValue=(value,initialValue)=>null==value||shallow_1.default(value,initialValue)||Array.isArray(value)&&0===value.length;const findDeepPatches=(config,basePath)=>Object.keys(config).reduce((next,item)=>"function"==typeof config[item]?[...next,{path:[...basePath,item],op:"replace"}]:[...next,...findDeepPatches(config[item],[...basePath,item])],[]);exports.createQueriesFromPatch=(config,ns,patch,state,initialState)=>patch.reduce((next,item)=>{const{path:path,op:op}=item,[,patchNamespace,,...objectPath]=path;if(patchNamespace!==ns)return next;const possibleParameter=exports.get(config,objectPath),isNotCallable="function"!=typeof possibleParameter;if(void 0!==possibleParameter&&isNotCallable){const patches=findDeepPatches(possibleParameter,path);return Object.assign(Object.assign({},next),exports.createQueriesFromPatch(config,ns,patches,state,initialState))}if(isNotCallable)return next;const{name:name,serializer:serializer,skip:skip}=possibleParameter(),value=exports.get(state,objectPath),initialValue=exports.get(initialState,objectPath),nextValue=exports.skipValue(value,initialValue)?void 0:value;return Object.assign(Object.assign({},next),{[exports.formatNamespace(name,ns)]:void 0===nextValue?nextValue:serializer.serialize(nextValue)})},{}),exports.createQueryObject=(config,ns,values,initialState)=>Object.keys(config).reduce((next,parameter)=>{const{path:path,serializer:serializer}=config[parameter],possibleValue=exports.get(values,path),nextValue=exports.skipValue(possibleValue,exports.get(initialState,path))?void 0:possibleValue;return void 0===nextValue?next:Object.assign(Object.assign({},next),{[exports.formatNamespace(parameter,ns)]:serializer.serialize(nextValue)})},{}),exports.applyDiffWithCreateQueriesFromPatch=(config,ns,currentQuery,patch,state,initialState)=>{const query=exports.createQueriesFromPatch(config,ns,patch,state,initialState),nextQueries=Object.assign(Object.assign({},currentQuery),query);return Object.keys(nextQueries).filter(key=>void 0!==nextQueries[key]).reduce((next,key)=>Object.assign(Object.assign({},next),{[key]:nextQueries[key]}),{})},exports.applyFlatConfigToState=(config,queryValues,ns,state,initialState)=>Object.keys(config).reduce((next,queryParameter)=>{const{path:path,serializer:serializer}=config[queryParameter],nsQueryParameter=exports.formatNamespace(queryParameter,ns),maybeValue=queryValues[nsQueryParameter],value=void 0===maybeValue?exports.get(initialState,path):serializer.deserialize(maybeValue);return exports.createOrApplyPath(state,path,value),exports.skipValue(value,exports.get(initialState,path))?next:Object.assign(Object.assign({},next),{[nsQueryParameter]:maybeValue})},{}),exports.flattenConfig=(config,path=[])=>Object.keys(config).reduce((next,key)=>{const v=config[key],nextPath=[...path,key];if("function"==typeof v){const _a=v(),{name:name}=_a,rest=__rest(_a,["name"]);if(void 0!==next[name])throw new Error(`Config invalid: Multiple definitions found for ${name}.`);return Object.assign(Object.assign({},next),{[name]:Object.assign({path:nextPath},rest)})}return"object"==typeof v?Object.assign(Object.assign({},next),exports.flattenConfig(v,nextPath)):next},{});try{exports.skipValue.displayName="skipValue",exports.skipValue.__docgenInfo={description:"Default skip implementation",displayName:"skipValue",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/utils.ts#skipValue"]={docgenInfo:exports.skipValue.__docgenInfo,name:"skipValue",path:"src/lib/utils.ts#skipValue"})}catch(__react_docgen_typescript_loader_error){}try{exports.createQueriesFromPatch.displayName="createQueriesFromPatch",exports.createQueriesFromPatch.__docgenInfo={description:"@return an object with the keys that have been processed\nif a key has been removed / set to undefined, we still return it to\nbe able to create a diff to the current state",displayName:"createQueriesFromPatch",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/utils.ts#createQueriesFromPatch"]={docgenInfo:exports.createQueriesFromPatch.__docgenInfo,name:"createQueriesFromPatch",path:"src/lib/utils.ts#createQueriesFromPatch"})}catch(__react_docgen_typescript_loader_error){}try{exports.createQueryObject.displayName="createQueryObject",exports.createQueryObject.__docgenInfo={description:"Creates a queryObject that can be serialized.",displayName:"createQueryObject",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/utils.ts#createQueryObject"]={docgenInfo:exports.createQueryObject.__docgenInfo,name:"createQueryObject",path:"src/lib/utils.ts#createQueryObject"})}catch(__react_docgen_typescript_loader_error){}try{exports.applyFlatConfigToState.displayName="applyFlatConfigToState",exports.applyFlatConfigToState.__docgenInfo={description:"Applies the given queryValues to the current state, based on the configuration\nImportant: Mutates `state`.\n@return an object with the keys that have been processed",displayName:"applyFlatConfigToState",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/utils.ts#applyFlatConfigToState"]={docgenInfo:exports.applyFlatConfigToState.__docgenInfo,name:"applyFlatConfigToState",path:"src/lib/utils.ts#applyFlatConfigToState"})}catch(__react_docgen_typescript_loader_error){}try{exports.flattenConfig.displayName="flattenConfig",exports.flattenConfig.__docgenInfo={description:"Creates a flat serializable object based on a mapping Object\nthat can be used to generate a query string.\n@return a key/value object with the object containing the defined parameters as key.",displayName:"flattenConfig",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/utils.ts#flattenConfig"]={docgenInfo:exports.flattenConfig.__docgenInfo,name:"flattenConfig",path:"src/lib/utils.ts#flattenConfig"})}catch(__react_docgen_typescript_loader_error){}},274:function(module,exports,__webpack_require__){"use strict";var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const react_1=__importStar(__webpack_require__(0)),shallow_1=__importDefault(__webpack_require__(182)),store_1=__webpack_require__(183);exports.GeschichteWithHistory=react_1.forwardRef(({children:children,history:history},ref)=>{const historyInstance=react_1.useMemo(()=>({initialSearch:history.location.search,push:next=>history.push({search:next,state:{__g__:!0}}),replace:next=>history.replace({search:next,state:{__g__:!0}})}),[history]),value=react_1.useMemo(()=>store_1.geschichte(historyInstance),[historyInstance]),[useStore]=value,state=useStore(({unregister:unregister,updateFromQuery:updateFromQuery})=>({unregister:unregister,updateFromQuery:updateFromQuery}),shallow_1.default);return react_1.useEffect(()=>history.listen((location,action)=>{("REPLACE"===action||"PUSH"===action)&&location.state&&location.state.__g__||state.updateFromQuery(location.search)}),[history,state.updateFromQuery]),react_1.useImperativeHandle(ref,()=>({updateFromQuery:state.updateFromQuery}),[state]),react_1.useEffect(()=>{const{unregister:unregister}=state;return()=>unregister()},[state]),react_1.default.createElement(store_1.StoreContext.Provider,{value:value},children)}),exports.default=exports.GeschichteWithHistory;try{exports.GeschichteWithHistory.displayName="GeschichteWithHistory",exports.GeschichteWithHistory.__docgenInfo={description:"",displayName:"GeschichteWithHistory",props:{history:{defaultValue:null,description:"a history instance (e.g. createBrowserHistory())",name:"history",required:!0,type:{name:"History<{}>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<Refs>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/adapters/History.js.tsx#GeschichteWithHistory"]={docgenInfo:exports.GeschichteWithHistory.__docgenInfo,name:"GeschichteWithHistory",path:"src/lib/adapters/History.js.tsx#GeschichteWithHistory"})}catch(__react_docgen_typescript_loader_error){}try{ForwardRefExoticComponent.displayName="ForwardRefExoticComponent",ForwardRefExoticComponent.__docgenInfo={description:"",displayName:"ForwardRefExoticComponent",props:{history:{defaultValue:null,description:"a history instance (e.g. createBrowserHistory())",name:"history",required:!0,type:{name:"History<{}>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<Refs>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/adapters/History.js.tsx#ForwardRefExoticComponent"]={docgenInfo:ForwardRefExoticComponent.__docgenInfo,name:"ForwardRefExoticComponent",path:"src/lib/adapters/History.js.tsx#ForwardRefExoticComponent"})}catch(__react_docgen_typescript_loader_error){}},431:function(module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const immer_1=__webpack_require__(428),memoize_one_1=__importDefault(__webpack_require__(429)),query_string_1=__webpack_require__(430),utils_1=__webpack_require__(270);var HistoryEventType;!function(HistoryEventType){HistoryEventType[HistoryEventType.PUSH=0]="PUSH",HistoryEventType[HistoryEventType.REPLACE=1]="REPLACE",HistoryEventType[HistoryEventType.REGISTER=2]="REGISTER"}(HistoryEventType=exports.HistoryEventType||(exports.HistoryEventType={})),exports.historyManagement=historyInstance=>apply=>(set,get,api)=>apply((fn,type,ns)=>set((changes,values)=>{if(0===changes.length)return values;if(type!==HistoryEventType.REGISTER){const affectedNamespaces=ns?[ns]:changes.reduce((next,change)=>{const{path:[,namespace]}=change;return-1===next.indexOf(namespace)?[...next,namespace]:next},[]),uniqueQueries=affectedNamespaces.reduce((next,thisNs)=>{const{config:config,query:currentQuery}=get().namespaces[thisNs];return Object.assign(Object.assign({},next),{[thisNs]:utils_1.applyDiffWithCreateQueriesFromPatch(config,thisNs,currentQuery,changes,values.namespaces[thisNs].values,values.namespaces[thisNs].initialValues)})},{}),method=type===HistoryEventType.PUSH?"push":"replace",otherQueries=Object.keys(values.namespaces).reduce((next,thisNs)=>-1!==affectedNamespaces.indexOf(thisNs)?next:Object.assign(Object.assign({},next),values.namespaces[thisNs].query),{}),reducedQueries=Object.keys(uniqueQueries).reduce((next,thisNs)=>Object.assign(Object.assign({},next),uniqueQueries[thisNs]),{}),query=query_string_1.stringify(Object.assign(Object.assign({},otherQueries),reducedQueries));return historyInstance[method](""===query?"":`?${query}`),Object.assign(Object.assign({},values),{namespaces:Object.assign(Object.assign({},values.namespaces),affectedNamespaces.reduce((next,thisNs)=>Object.assign(Object.assign({},next),{[thisNs]:Object.assign(Object.assign({},values.namespaces[thisNs]),{query:uniqueQueries[thisNs]})}),{}))})}return values},fn,type,ns),get,api);exports.immerWithPatches=config=>(set,get,api)=>config((valueMapper,fn,type,ns)=>set(currentState=>{const[nextValues,changes]=immer_1.produceWithPatches(((fn,ns)=>state=>{if(!ns){const result=fn(state.namespaces);return void(result&&(state.namespaces=result))}if(state.namespaces[ns])return void fn(state.namespaces[ns]);const next={};fn(next),state.namespaces[ns]=next})(fn,ns))(currentState);return valueMapper(changes,nextValues)},`action_${HistoryEventType[type]}`),get,api);const parseSearchString=search=>query_string_1.parse(search);exports.converter=historyInstance=>(set,get,api)=>{const memoizedGetInitialQueries=memoize_one_1.default(parseSearchString),reset=(ns,event)=>set(state=>{state.values=state.initialValues},event,ns);return{batchPushState:(ns,fn)=>{set(state=>{fn(...ns.map(thisNs=>(state[thisNs]||{}).values))},HistoryEventType.PUSH)},batchReplaceState:(ns,fn)=>{set(state=>{fn(...ns.map(thisNs=>(state[thisNs]||{}).values))},HistoryEventType.REPLACE)},initialQueries:()=>memoizedGetInitialQueries(historyInstance.initialSearch),namespaces:{},pushState:(ns,fn)=>set(state=>fn(state.values),HistoryEventType.PUSH,ns),register:(config,mappedConfig,ns,initialValues,query,values)=>{const current=get().namespaces[ns];return void 0!==current?(set(state=>{state.subscribers=state.subscribers+1},HistoryEventType.REGISTER,ns),current.unsubscribe):(set(state=>{state.subscribers=1,state.unsubscribe=()=>{set(thisState=>{thisState[ns]&&(thisState[ns].subscribers=thisState[ns].subscribers-1,0===thisState[ns].subscribers&&delete thisState[ns])},HistoryEventType.REGISTER)},state.mappedConfig=mappedConfig,state.config=config,state.initialValues=initialValues,state.values=values,state.query=query},HistoryEventType.REGISTER,ns),get().namespaces[ns].unsubscribe)},replaceState:(ns,fn)=>set(state=>fn(state.values),HistoryEventType.REPLACE,ns),resetPush:ns=>reset(ns,HistoryEventType.PUSH),resetReplace:ns=>reset(ns,HistoryEventType.REPLACE),unregister:()=>{set(()=>({}),HistoryEventType.REGISTER)},updateFromQuery:search=>{const nextQueries=memoizedGetInitialQueries(search),namespaces=get().namespaces;Object.keys(namespaces).forEach(ns=>{get().namespaces[ns]&&set(state=>{state.query=utils_1.applyFlatConfigToState(state.mappedConfig,nextQueries,ns,state.values,state.initialValues)},HistoryEventType.REGISTER,ns)})}}};try{exports.historyManagement.displayName="historyManagement",exports.historyManagement.__docgenInfo={description:"",displayName:"historyManagement",props:{initialSearch:{defaultValue:null,description:"the initial search string (e.g. ?query=test), contains the questionsmark",name:"initialSearch",required:!0,type:{name:"string"}},push:{defaultValue:null,description:"",name:"push",required:!0,type:{name:"(next: string) => void"}},replace:{defaultValue:null,description:"",name:"replace",required:!0,type:{name:"(next: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/middleware.ts#historyManagement"]={docgenInfo:exports.historyManagement.__docgenInfo,name:"historyManagement",path:"src/lib/middleware.ts#historyManagement"})}catch(__react_docgen_typescript_loader_error){}try{exports.immerWithPatches.displayName="immerWithPatches",exports.immerWithPatches.__docgenInfo={description:"",displayName:"immerWithPatches",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/middleware.ts#immerWithPatches"]={docgenInfo:exports.immerWithPatches.__docgenInfo,name:"immerWithPatches",path:"src/lib/middleware.ts#immerWithPatches"})}catch(__react_docgen_typescript_loader_error){}try{exports.converter.displayName="converter",exports.converter.__docgenInfo={description:"",displayName:"converter",props:{initialSearch:{defaultValue:null,description:"the initial search string (e.g. ?query=test), contains the questionsmark",name:"initialSearch",required:!0,type:{name:"string"}},push:{defaultValue:null,description:"",name:"push",required:!0,type:{name:"(next: string) => void"}},replace:{defaultValue:null,description:"",name:"replace",required:!0,type:{name:"(next: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/middleware.ts#converter"]={docgenInfo:exports.converter.__docgenInfo,name:"converter",path:"src/lib/middleware.ts#converter"})}catch(__react_docgen_typescript_loader_error){}},446:function(module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const history_1=__webpack_require__(275),react_1=__importDefault(__webpack_require__(0)),index_1=__importStar(__webpack_require__(1274)),history=history_1.createBrowserHistory(),config={abc:{test:index_1.pm("z",index_1.serializers.string)},arg:index_1.pm("arg",index_1.serializers.string),test:index_1.pm("foo",index_1.serializers.string)},{useQuery:useQuery}=index_1.factoryParameters(config,{abc:{test:"arg"},arg:"blub",test:"haha"}),{useQuery:useAnotherQuery}=index_1.factoryParameters(config,()=>({abc:{test:"arg"},arg:"xyz",test:"another"}),"wow"),InnerApp=()=>{const{values:values,pushState:pushState}=useQuery();return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement("input",{type:"text",value:values.test,onChange:event=>{pushState(state=>{state.test=event.target.value})}}),react_1.default.createElement("p",null,JSON.stringify(values)))},DifferentApp=()=>{const{values:otherNsValues,pushState:pushState,resetPush:resetPush}=useAnotherQuery();return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement("input",{type:"text",value:otherNsValues.test,onChange:event=>{pushState(state=>{state.test=event.target.value})}}),react_1.default.createElement("button",{onClick:()=>resetPush()},"Reset"))};exports.App=()=>react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(index_1.default,{history:history},react_1.default.createElement("h3",null,"A sample Appliations"),react_1.default.createElement(InnerApp,null),react_1.default.createElement(DifferentApp,null)))},447:function(module,exports,__webpack_require__){__webpack_require__(448),__webpack_require__(590),__webpack_require__(591),__webpack_require__(1241),module.exports=__webpack_require__(1242)},510:function(module,exports){}},[[447,1,2]]]);
//# sourceMappingURL=main.a2e44c4a9e17ce77bc19.bundle.js.map