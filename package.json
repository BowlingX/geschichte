{
  "name": "geschichte",
  "version": "1.0.0",
  "description": "zustand based middleware to manage state inside the url",
  "main": "build/main/index.js",
  "typings": "build/main/index.d.ts",
  "module": "build/module/index.js",
  "repository": "https://github.com/BowlingX/geschichte",
  "license": "MIT",
  "keywords": [],
  "scripts": {
    "describe": "npm-scripts-info",
    "build": "run-s clean && run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.{ts,tsx}\" --write",
    "fix:tslint": "tslint --fix --project .",
    "test": "run-s build test:*",
    "test:lint": "tslint --project . && prettier \"src/**/*.ts\" --list-different",
    "test:unit": "jest --coverage",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash build test",
    "prepare-release": "run-s reset test cov:check doc:html version doc:publish",
    "preinstall": "node -e \"if(process.env.npm_execpath.indexOf('yarn') === -1) throw new Error('geschichte must be installed with Yarn: https://yarnpkg.com/')\""
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "engines": {
    "node": ">=8.9"
  },
  "dependencies": {

  },
  "peerDependencies": {
    "zustand": "^2",
    "immer": "^5",
    "react": ">=16.8",
    "react-dom": ">=16.8",
    "history": "^5"
  },
  "devDependencies": {
    "zustand": "^2.2.1",
    "immer": "^5.0.0",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "history": "^5.0.0-beta.0",
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@bitjson/typedoc": "^0.15.0-0",
    "cz-conventional-changelog": "^3.0.2",
    "gh-pages": "^2.1.1",
    "npm-run-all": "^4.1.5",
    "open-cli": "^5.0.0",
    "prettier": "^1.19.1",
    "standard-version": "^7.0.1",
    "trash-cli": "^3.0.0",
    "tslint": "^5.20.1",
    "tslint-config-prettier": "^1.18.0",
    "tslint-immutable": "^6.0.1",
    "typescript": "^3.7.2",
    "browser-env": "^3.3.0",
    "enzyme": "^3.10.0",
    "jest": "^24.9.0",
    "ts-jest": "^24.2.0",
    "jest-environment-enzyme": "^7.1.2",
    "jest-enzyme": "^7.1.2",
    "jest-junit": "^9.0.0",
    "jsdom": "^15.2.1",
    "enzyme-adapter-react-16": "^1.15.1",
    "expect": "^24.9.0",
    "@types/node": "^12.12.14",
    "@types/jest": "^24.0.23"
  },
  "jest": {
    "transform": {
      ".(ts|tsx)": "ts-jest"
    },
    "testEnvironment": "enzyme",
    "testEnvironmentOptions": {
      "enzymeAdapter": "react16"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "setupFilesAfterEnv": [
      "jest-enzyme"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/test/"
    ],
    "coverageReporters": [
      "text",
      "cobertura"
    ],
    "roots": [
      "src/"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 95,
        "lines": 95,
        "statements": 95
      }
    },
    "collectCoverageFrom": [
      "src/*.{js,ts,tsx}"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "singleQuote": true
  }
}
